# syntax=docker/dockerfile:1
FROM debian:stable-slim AS m2st_base

# Define set -u with a harmless non-null LD_LIBRARY_PATH
ENV LD_LIBRARY_PATH=/root

# Check whether ENV variables are for the docker construction, or propagate into the default shell
ENV DOCKERHUB_IMAGE_NAME=avstephen/marte2-sigtools-debian-stable-slim

# Avoid any interactive prompts that don't pass via the -y flag
ENV DEBIAN_FRONTEND=noninteractive

# Minimal support we must have git
RUN apt-get update && apt-get install -y git

# Scripts should work robustly from any reasonable directory.
WORKDIR /opt/MARTe2/Projects

# Cache control use this with docker build --build-arg CACHE_DATE="$(date)" to force refresh.
ARG CACHE_DATE=1999-01-04

# All the build infrastructure is maintained with the project
RUN git clone -b develop https://github.com/AdamVStephen/MARTe2-sigtools

# Scripts should work robustly from any reasonable directory.
WORKDIR /opt/MARTe2/Projects/MARTe2-sigtools/bin

# Get some feedback to the log file as to what commit this actually gave us
RUN git log -1

FROM m2st_base AS m2st_packages
# Install packaged dependencies
RUN ./install-packages.sh

FROM m2st_packages AS m2st_dependencies
# Install source dependencies
RUN ./install-other-dependencies.sh

FROM m2st_dependencies AS m2st_built
# Build correct source files
RUN ./install-build.sh

FROM ms2t_built AS m2st
# Set the working environment
#RUN source marte2-sigtools-setenv.sh
RUN echo "cd /opt/MARTe2/Projects/MARTe2-sigtools/bin && . marte2-sigtools-setenv.sh" >> /root/.bashrc


# Install packaged dependencies
RUN ./marte2-sigtools-dependencies.sh

# Install source dependencies
RUN ./marte2-sigtools-repos.sh

# Build correct source files
RUN ./marte2-sigtools-build.sh

# Set the working environment
RUN source marte2-sigtools-setenv.sh

# Drop into a shell
CMD /bin/bash

